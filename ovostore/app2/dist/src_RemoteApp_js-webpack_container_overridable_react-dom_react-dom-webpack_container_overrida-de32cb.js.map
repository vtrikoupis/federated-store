{"version":3,"sources":["webpack://@ovostore/app2/./src/RemoteApp.js","webpack://@ovostore/app2/./src/reducer.js"],"names":["remoteAppScope","RemoteApp","dispatch","useDispatch","state","useSelector","remoteAppInput","setRemoteAppInput","useState","marginTop","appName","marginRight","e","target","value","changeAppNameAction","RemoteAppWrapper","props","store","useEffect","injectReducer","reducer","initialState","CHANGE_APP_NAME","type","payload","action"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA,MAAMA,cAAc,GAAG,WAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGC,wDAAW,EAA5B;AACA,QAAMC,KAAK,GAAGC,wDAAW,CAAED,KAAD,IAAWA,KAAK,CAACJ,cAAD,CAAjB,CAAzB;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCC,+CAAQ,CAAC,EAAD,CAApD;AAEA,sBACE;AAAK,SAAK,EAAE;AAAEC,eAAS,EAAE;AAAb;AAAZ,kBACE,oFADF,eAEE,oHAC2CL,KAAK,IAAIA,KAAK,CAACM,OAD1D,CAFF,eAME,qFACE;AACE,SAAK,EAAE;AAAEC,iBAAW,EAAE;AAAf,KADT;AAEE,QAAI,EAAC,MAFP;AAGE,YAAQ,EAAGC,CAAD,IAAO;AACfL,uBAAiB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD;AALH,IADF,eAQE;AAAQ,WAAO,EAAE,MAAMZ,QAAQ,CAACa,6DAAmB,CAACT,cAAD,CAApB;AAA/B,mCARF,CANF,CADF;AAqBD,CA1BD;;AA4BA,MAAMU,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC;AAAF,MAAYD,KAAlB;AACAE,kDAAS,CAAC,MAAM;AACdD,SAAK,CAACE,aAAN,CAAoBpB,cAApB,EAAoCqB,6CAApC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,2DAAC,iDAAD;AAAU,SAAK,EAAEH,KAAK,IAAI;AAA1B,kBACE,2DAAC,SAAD,OADF,CADF;AAKD,CAXD;;AAaA,iEAAeF,gBAAf,E;;;;;;;;;;;;;;;;;;;;ACjDA,MAAMM,YAAY,GAAG;AACnBZ,SAAO,EAAE;AADU,CAArB;AAIA,MAAMa,eAAe,GAAG,iBAAxB;;AAEA,MAAMR,mBAAmB,GAAIL,OAAD,IAAa;AACvC,SAAO;AAAEc,QAAI,EAAED,eAAR;AAAyBE,WAAO,EAAEf;AAAlC,GAAP;AACD,CAFD;;AAIA,MAAMW,OAAO,GAAG,CAACjB,KAAK,GAAGkB,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACF,IAAf;AACE,SAAKD,eAAL;AAAsB;AACpB,eAAO,EACL,GAAGnB,KADE;AAELM,iBAAO,EAAEgB,MAAM,CAACD;AAFX,SAAP;AAID;AANH;;AAQA,SAAOrB,KAAP;AACD,CAVD;;AAYA;AACA,iEAAeiB,OAAf,E","file":"src_RemoteApp_js-webpack_container_overridable_react-dom_react-dom-webpack_container_overrida-de32cb.js","sourcesContent":["import React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport reducer, { changeAppNameAction } from './reducer';\n\nconst remoteAppScope = 'remoteApp';\n\nconst RemoteApp = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state[remoteAppScope]);\n  const [remoteAppInput, setRemoteAppInput] = useState('');\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>RemoteApp</div>\n      <div>\n        RemoteApp's name from the redux store : {state && state.appName}\n      </div>\n\n      <div>\n        <input\n          style={{ marginRight: '10px' }}\n          type=\"text\"\n          onChange={(e) => {\n            setRemoteAppInput(e.target.value);\n          }}\n        />\n        <button onClick={() => dispatch(changeAppNameAction(remoteAppInput))}>\n          Dispatch RemoteApp new name\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst RemoteAppWrapper = (props) => {\n  const { store } = props;\n  useEffect(() => {\n    store.injectReducer(remoteAppScope, reducer);\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <RemoteApp />\n    </Provider>\n  );\n};\n\nexport default RemoteAppWrapper;\n","const initialState = {\n  appName: 'remoteApp',\n};\n\nconst CHANGE_APP_NAME = 'CHANGE_APP_NAME';\n\nconst changeAppNameAction = (appName) => {\n  return { type: CHANGE_APP_NAME, payload: appName };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_APP_NAME: {\n      return {\n        ...state,\n        appName: action.payload,\n      };\n    }\n  }\n  return state;\n};\n\nexport { changeAppNameAction };\nexport default reducer;\n"],"sourceRoot":""}